{"version":3,"sources":["components/HabitForm.jsx","components/Tracker.jsx","components/LoginCard.jsx","services/login.js","components/RegisterCard.jsx","components/UserCard.jsx","components/Header.jsx","services/logs.js","services/habits.js","App.js","index.js"],"names":["HabitForm","props","console","log","this","handleCancelShowHabitForm","newHabit","setNewHabit","handleSubmitHabit","className","Form","onSubmit","Group","controlId","Control","as","type","placeholder","autoComplete","value","onChange","target","Button","variant","colSpan","Component","onClickOutside","Tracker","today","month","habits","logs","handleToggleCell","handleClickShowHabitForm","showHabitForm","daysInMonth","getDaysInMonth","logsByHabit","reduce","lookup","set","habitId","get","Date","date","getDate","Map","Container","fluid","Table","bordered","responsive","style","borderStyle","Array","map","_","i","getMonth","habit","name","padding","width","size","onClick","id","includes","icon","faCheck","block","faPlus","LoginCard","username","setUsername","password","setPassword","handleLogin","popover","Popover","Title","Content","Label","OverlayTrigger","trigger","rootClose","placement","overlay","login","credentials","a","axios","post","response","data","register","RegisterCard","setUser","useState","newUsername","setNewUsername","newPassword","setNewPassword","newName","setNewName","handleRegister","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","location","reload","UserCard","handleLogout","Header","onIncrementMonth","onDecrementMonth","Navbar","bg","ButtonGroup","aria-label","faChevronLeft","faChevronRight","format","require","baseUrl","token","config","setToken","newToken","headers","Authorization","getByMonth","getFullYear","getById","putById","put","deleteById","delete","App","UTC","setMonth","setHabits","setLogs","setShowHabitForm","useEffect","loggedUserJSON","getItem","parse","logService","habitService","then","returnedHabits","returnedLogs","removeItem","length","returnedHabit","concat","cellDay","cellIsChecked","newLogs","idToDelete","find","filter","returnedLog","push","addMonths","subMonths","Tabs","defaultActiveKey","Tab","eventKey","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78fdc4cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport onClickOutside from 'react-onclickoutside';\n\nclass HabitForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClickOutside() {\n    console.log('clicked outside');\n    this.props.handleCancelShowHabitForm();\n  }\n\n  render() {\n    const { newHabit, setNewHabit, handleSubmitHabit } = this.props;\n    return (\n      <tr>\n        <td className='align-middle text-center'>\n          <Form onSubmit={handleSubmitHabit}>\n            <Form.Group controlId='formHabit'>\n              <Form.Control\n                as='input'\n                type='text'\n                placeholder=''\n                autoComplete='off'\n                value={newHabit}\n                onChange={({ target }) => setNewHabit(target.value)}\n              />\n            </Form.Group>\n            <Button variant='secondary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n        </td>\n        <td colSpan='30' className='align-middle text-secondary'>\n          Type a new habit or click away to cancel\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default onClickOutside(HabitForm);\n","import React from 'react';\nimport { getDaysInMonth } from 'date-fns';\nimport { Container, Table, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport HabitForm from './HabitForm';\n\nconst Tracker = ({\n  today,\n  month,\n  habits,\n  logs,\n  handleToggleCell,\n  handleClickShowHabitForm,\n  handleCancelShowHabitForm,\n  handleSubmitHabit,\n  newHabit,\n  setNewHabit,\n  showHabitForm,\n}) => {\n  const daysInMonth = getDaysInMonth(month);\n\n  const groupbyLogByHabit = (array) =>\n    array.reduce(\n      (lookup, log) => lookup.set(log.habitId, [...(lookup.get(log.habitId) || []), new Date(log.date).getDate()]),\n      new Map()\n    );\n  console.log('[Tracker] logs:', logs);\n\n  const logsByHabit = groupbyLogByHabit(logs);\n\n  return (\n    <Container fluid>\n      <Table bordered responsive style={{ borderStyle: 'hidden' }}>\n        <thead>\n          <tr>\n            <th></th>\n            {[...Array(31)].map((_, i) =>\n              i < daysInMonth ? (\n                // If date is today, highlight cell\n                <th\n                  className={\n                    i + 1 === today.getDate() && month.getMonth() === today.getMonth()\n                      ? 'text-center border-dark border-right-0'\n                      : 'text-center'\n                  }\n                >\n                  {i + 1}\n                </th>\n              ) : (\n                // If date does not exist in month (e.g. Feb 31th), do not display date\n                <th className='text-center text-light'>{i + 1}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {habits.map((habit) => (\n            <tr>\n              <td className='align-middle'>{habit.name}</td>\n              {[...Array(31)].map((_, i) => (\n                <td className='align-middle text-center' style={{ padding: 0, width: '3%' }}>\n                  {i < daysInMonth && (\n                    <Button\n                      variant='outline-dark'\n                      size='sm'\n                      onClick={() =>\n                        handleToggleCell(\n                          i + 1,\n                          habit.id,\n                          logsByHabit.get(habit.id) && logsByHabit.get(habit.id).includes(i + 1)\n                        )\n                      }\n                    >\n                      <FontAwesomeIcon\n                        icon={faCheck}\n                        className={\n                          logsByHabit.get(habit.id) && logsByHabit.get(habit.id).includes(i + 1) ? '' : 'text-light'\n                        }\n                      />\n                    </Button>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n          {showHabitForm && (\n            <HabitForm\n              handleCancelShowHabitForm={handleCancelShowHabitForm}\n              handleSubmitHabit={handleSubmitHabit}\n              newHabit={newHabit}\n              setNewHabit={setNewHabit}\n            />\n          )}\n        </tbody>\n      </Table>\n      <Button variant='outline-secondary' size='sm' block onClick={handleClickShowHabitForm}>\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n    </Container>\n  );\n};\n\nexport default Tracker;\n","import React from 'react';\nimport { Popover, OverlayTrigger, Form, Button } from 'react-bootstrap';\n\nconst LoginCard = ({ username, setUsername, password, setPassword, handleLogin }) => {\n  const popover = (\n    <Popover id='login-card'>\n      <Popover.Title as='h3'>Login</Popover.Title>\n      <Popover.Content>\n        <Form onSubmit={handleLogin}>\n          <Form.Group controlId='formGroupUsername'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type='username'\n              placeholder='Enter username'\n              value={username}\n              autoComplete='off'\n              onChange={({ target }) => setUsername(target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPassword'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Password'\n              value={password}\n              autoComplete='off'\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </Popover.Content>\n    </Popover>\n  );\n  return (\n    <OverlayTrigger trigger='click' rootClose placement='bottom' overlay={popover}>\n      <Button variant='outline-primary'>Login</Button>\n    </OverlayTrigger>\n  );\n};\n\nexport default LoginCard;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst register = async (credentials) => {\n  const response = await axios.post('/api/users', credentials);\n  return response.data;\n};\n\nexport default { login, register };\n","import React, { useState } from 'react';\nimport { Popover, OverlayTrigger, Form, Button } from 'react-bootstrap';\nimport loginService from '../services/login';\n\nconst RegisterCard = ({ setUser }) => {\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newName, setNewName] = useState('');\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.register({ username: newUsername, password: newPassword, name: newName });\n      window.localStorage.setItem('progressUser', JSON.stringify(user)); // save to browser storage so user doesn't have to login every time they reload\n      setUser(user);\n      setNewUsername('');\n      setNewPassword('');\n      setNewName('');\n    } catch (error) {\n      console.log(error);\n    }\n    setNewUsername('');\n    setNewPassword('');\n    window.location.reload(false);\n  };\n\n  const popover = (\n    <Popover id='register-card'>\n      <Popover.Title as='h3'>Register</Popover.Title>\n      <Popover.Content>\n        <Form onSubmit={handleRegister}>\n          <Form.Group controlId='formGroupUsername'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type='username'\n              placeholder='Enter username'\n              value={newUsername}\n              autoComplete='off'\n              onChange={({ target }) => setNewUsername(target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPassword'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Password'\n              value={newPassword}\n              autoComplete='off'\n              onChange={({ target }) => setNewPassword(target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupName'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Your name'\n              value={newName}\n              autoComplete='off'\n              onChange={({ target }) => setNewName(target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>\n            Submit\n          </Button>\n        </Form>\n      </Popover.Content>\n    </Popover>\n  );\n  return (\n    <OverlayTrigger trigger='click' rootClose placement='bottom' overlay={popover}>\n      <Button variant='outline-primary'>Register</Button>\n    </OverlayTrigger>\n  );\n};\n\nexport default RegisterCard;\n","import React from 'react';\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\n\nconst UserCard = ({ user, handleLogout }) => {\n  const popover = (\n    <Popover id='user-card'>\n      <Popover.Title as='h3'>Logged in as {user.username}</Popover.Title>\n      <Popover.Content className='text-center'>\n        <Button variant='primary' onClick={handleLogout}>\n          Logout\n        </Button>\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger trigger='click' rootClose placement='bottom' overlay={popover}>\n      <Button variant='outline-primary'>{user.name ? user.name : user.username}</Button>\n    </OverlayTrigger>\n  );\n};\n\nexport default UserCard;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { Container, Navbar, ButtonGroup, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport LoginCard from './LoginCard';\nimport RegisterCard from './RegisterCard';\nimport UserCard from './UserCard';\n\nconst Header = ({\n  month,\n  onIncrementMonth,\n  onDecrementMonth,\n  username,\n  password,\n  user,\n  setUser,\n  setUsername,\n  setPassword,\n  handleLogin,\n  handleLogout,\n}) => {\n  return (\n    <Navbar bg='light'>\n      <Container>\n        <ButtonGroup className='mb-1 mx-2' aria-label='navigate month'>\n          <Button onClick={onDecrementMonth} variant='outline-dark' size='sm'>\n            <FontAwesomeIcon className='mt-1' icon={faChevronLeft} />\n          </Button>\n          <Button onClick={onIncrementMonth} variant='outline-dark' size='sm'>\n            <FontAwesomeIcon className='mt-1' icon={faChevronRight} />\n          </Button>\n        </ButtonGroup>\n        <span className='mr-auto'>{format(month, 'MMMM yyyy')}</span>\n        {user ? (\n          <UserCard user={user} handleLogout={handleLogout} />\n        ) : (\n          <>\n            <RegisterCard setUser={setUser} />\n            <span className='mx-1' />\n            <LoginCard\n              username={username}\n              password={password}\n              setUsername={setUsername}\n              setPassword={setPassword}\n              handleLogin={handleLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","const axios = require('axios');\n\nconst baseUrl = '/api/logs';\nlet token = null;\nlet config = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n  config = {\n    headers: { Authorization: token },\n  };\n};\n\nconst get = async () => {\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst getByMonth = async (month) => {\n  const response = await axios.get(`/api/logs?yearmonth=${'' + month.getFullYear() + month.getMonth()}`, config);\n  return response.data;\n};\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst post = async (log) => {\n  const response = await axios.post(baseUrl, log, config);\n  return response.data;\n};\n\nconst putById = async (id, log) => {\n  const response = await axios.put(`${baseUrl}/${id}`, log, config);\n  return response.data;\n};\n\nconst deleteById = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { setToken, get, getByMonth, getById, post, putById, deleteById };\n","const axios = require('axios');\n\nconst baseUrl = '/api/habits';\nlet token = null;\nlet config = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n  config = {\n    headers: { Authorization: token },\n  };\n};\n\nconst get = async () => {\n  const response = await axios.get(baseUrl, config);\n  return response.data;\n};\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst post = async (habit) => {\n  const response = await axios.post(baseUrl, habit, config);\n  return response.data;\n};\n\nconst putById = async (id, habit) => {\n  const response = await axios.put(`${baseUrl}/${id}`, habit, config);\n  return response.data;\n};\n\nconst deleteById = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { setToken, get, getById, post, putById, deleteById };\n","import React, { useState, useEffect } from 'react';\nimport { addMonths, subMonths } from 'date-fns';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport './App.css';\nimport Tracker from './components/Tracker';\nimport Header from './components/Header';\nimport logService from './services/logs';\nimport habitService from './services/habits';\nimport loginService from './services/login';\n\nconst App = () => {\n  const today = new Date();\n  const [month, setMonth] = useState(new Date(Date.UTC(today.getFullYear(), today.getMonth())));\n  const [habits, setHabits] = useState([]);\n  const [logs, setLogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [showHabitForm, setShowHabitForm] = useState(false);\n  const [newHabit, setNewHabit] = useState('');\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('progressUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      console.log('--first', user);\n      logService.setToken(user.token);\n      habitService.setToken(user.token);\n    }\n  }, []);\n\n  useEffect(() => {\n    habitService.get().then((returnedHabits) => {\n      setHabits(returnedHabits);\n    });\n  }, []);\n\n  useEffect(() => {\n    logService.getByMonth(month).then((returnedLogs) => {\n      console.log(returnedLogs);\n      setLogs(returnedLogs);\n    });\n  }, [month]);\n\n  const handleIncrementMonth = () => setMonth(addMonths(new Date(Date.UTC(month.getFullYear(), month.getMonth())), 1));\n  const handleDecrementMonth = () => setMonth(subMonths(new Date(Date.UTC(month.getFullYear(), month.getMonth())), 1));\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({ username, password });\n      window.localStorage.setItem('progressUser', JSON.stringify(user)); // save to browser storage so user doesn't have to login every time they reload\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      console.log(error);\n    }\n    setUsername('');\n    setPassword('');\n    window.location.reload(false);\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    window.localStorage.removeItem('progressUser');\n    setUser(null);\n    window.location.reload(false);\n  };\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.register({ username, password });\n      window.localStorage.setItem('progressUser', JSON.stringify(user)); // save to browser storage so user doesn't have to login every time they reload\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      console.log(error);\n    }\n    setUsername('');\n    setPassword('');\n    window.location.reload(false);\n  };\n\n  const handleClickShowHabitForm = () => setShowHabitForm(true);\n  const handleCancelShowHabitForm = () => {\n    setNewHabit('');\n    setShowHabitForm(false);\n  };\n\n  const handleSubmitHabit = async (event) => {\n    event.preventDefault();\n    const habit = { id: habits.length + 1, name: newHabit };\n    const returnedHabit = await habitService.post(habit);\n    setHabits(habits.concat(returnedHabit));\n    setNewHabit('');\n    setShowHabitForm(false);\n  };\n\n  const handleToggleCell = async (cellDay, habitId, cellIsChecked) => {\n    console.log('----------------clicked cell', habitId, cellDay);\n\n    let newLogs = [...logs];\n    if (cellIsChecked) {\n      // update database\n      const idToDelete = logs.find((log) => log.habitId === habitId && new Date(log.date).getDate() === cellDay).id;\n      await logService.deleteById(idToDelete);\n      // update view\n      newLogs = newLogs.filter((log) => !(log.habitId === habitId && new Date(log.date).getDate() === cellDay));\n    } else {\n      // update database\n      const log = {\n        habitId,\n        date: new Date(Date.UTC(month.getFullYear(), month.getMonth(), cellDay)),\n      };\n      const returnedLog = await logService.post(log);\n      // update view\n      newLogs.push(returnedLog);\n    }\n\n    setLogs(newLogs);\n  };\n\n  return (\n    <div>\n      <Header\n        month={month}\n        onIncrementMonth={handleIncrementMonth}\n        onDecrementMonth={handleDecrementMonth}\n        username={username}\n        password={password}\n        user={user}\n        setUser={setUser}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n        handleRegister={handleRegister}\n      />\n      <Tabs defaultActiveKey='tracker' id='tabs'>\n        <Tab eventKey='tracker' title='Tracker' className=''>\n          <Tracker\n            today={today}\n            month={month}\n            habits={habits}\n            logs={logs}\n            handleToggleCell={handleToggleCell}\n            handleClickShowHabitForm={handleClickShowHabitForm}\n            handleCancelShowHabitForm={handleCancelShowHabitForm}\n            handleSubmitHabit={handleSubmitHabit}\n            newHabit={newHabit}\n            setNewHabit={setNewHabit}\n            showHabitForm={showHabitForm}\n          />\n        </Tab>\n        <Tab eventKey='stats' title='Stats'>\n          <br />\n          <br />\n          <p className='text-center'>Coming soon~</p>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}